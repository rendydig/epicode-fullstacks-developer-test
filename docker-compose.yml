version: '3.8'
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - epicode

  seeder:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./dbbackup/directus_backup.dump:/directus_backup.dump
      - ./dbbackup/restore.sh:/restore.sh
    command: /restore.sh
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - epicode

  directus:
    image: directus/directus:10.8.3
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_CLIENT: 'pg'
      DB_HOST: postgres
      DB_PORT: '5432'
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CORS_ENABLED: "true"
      CORS_ORIGIN: "true"
      PUBLIC_URL: ${PUBLIC_URL}
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/extensions:/directus/extensions
      - ./directus/logs:/directus/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - epicode

  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8055
    volumes:
      - ./apps/web:/app
      - ./apps/web/node_modules:/app/node_modules
      - web_vite_cache:/app/.vite
    depends_on:
      - directus
    tty: true
    stdin_open: true
    restart: unless-stopped
    networks:
      - epicode

networks:
  epicode:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  web_vite_cache:
    driver: local
